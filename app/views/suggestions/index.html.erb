  <style>
    swiper-container {
      width: 380px;
      height: 400px;
    }

    swiper-slide {
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 10px;
      font-size: 22px;
      font-weight: bold;
      color: #fff;
      background-color: rgb(255, 255, 255);
    }
  </style>
<div class="cover">

  <div class="card text-white image-container" style="max-height: 190px; object-fit: cover">
  <%= image_tag("dashboard-6.jpg", class: "card-img", style: "margin-top:20px; min-height: 215px ") %>

    <div>
    <p style="text-align:center; min-width:412px; top:95px;position: absolute;z-index: 1000; font-weight: 400; font-size: 18px; color: #262626; font-family: 'PT Sans', sans-serif; letter-spacing: 3px; font-style: italic"
    ><strong>Spark</strong> up your love life</p>
    <p style="text-align:center; min-width:412px; top:135px;position: absolute;z-index: 1000; font-weight: 100; font-size: 14px; color: #262626; text-align: center; font-family: 'PT Sans', sans-serif; letter-spacing: 2px"
        >explore 2,421 curated dating tips in</p>
    <p style="text-align:center; min-width:412px; top:160px;position: absolute;z-index: 1000; font-weight: 100; font-size: 14px; color: #262626; text-align: center; font-family: 'PT Sans', sans-serif; letter-spacing: 2px"
        >three different cities</p>
  </div>
</div>


  <swiper-container class="mySwiper" style="margin-top:40px;" effect="cards" grab-cursor="true">

 <% random_suggestions = @suggestions.sample(20) %>
      <% random_suggestions.each do |suggestion| %>
       <swiper-slide data-suggestion-id="<%= suggestion.id %>">

       <div class="card mb-3 suggestion-cards" style='overflow: hidden'>
          <% if suggestion.images.present? && suggestion.images[0].present? %>
  <%= image_tag(suggestion.images[0], class: "card-img-top", style: "max-height: 315px; object-fit:cover;") %>
<% else %>
  <%= image_tag("food-01.jpg", class: "card-img-top", style: "max-height: 315px; object-fit:cover;") %>
<% end %>
  <div class="suggestion-cards-info">
    <h5
        class="card-title"
        style="padding-top: 18px; font-weight: 600; padding-bottom: 5px; font-size: 19px"
      >
      <% if suggestion.title.length > 25 %>
  <%= suggestion.title[0..22] %>...
<% else %>
  <%= suggestion.title %>
<% end %></h5>
    <div>
      <p class="card-text b-5" style="font-size: 18px"><i class="fa-solid fa-location-dot"></i>
        <%= suggestion.city %>
        &nbsp;
        &nbsp;
        <i class="fa-solid fa-star" style="color: #992944; font-size: 14px">
          <%= suggestion.rating %></i>

      </p>
    </div>
  </div>
</div>

</swiper-slide>
      <% end %>
  </swiper-container>
  <script src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-element-bundle.min.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.min.js"></script>
   <script >



    //    https://hammerjs.github.io/recognizer-swipe/
    let suggestionCards = document.querySelectorAll("swiper-slide");
suggestionCards.forEach((card) => {
    let suggestionCard = new Hammer(card);

    suggestionCard.on('swipeleft', function() {
        let suggestionId = card.getAttribute('data-suggestion-id');
        removeFromFavorites(suggestionId);
    });

    suggestionCard.on('tap', function() {
        let suggestionId = card.getAttribute('data-suggestion-id');
        onTap(suggestionId);
    });

    suggestionCard.on('swiperight', function() {
        let suggestionId = card.getAttribute('data-suggestion-id');
        addToFavorites(suggestionId);
    });


});

function onTap(suggestionId) {
    newPageURL = "/suggestions/" + suggestionId; // Replace with your desired URL

    // Use window.location.href to navigate to the new page
    window.location.href = newPageURL;

}

function removeFromFavorites(suggestionId) {
    console.log('Swipet left:', suggestionId);
}

async function addToFavorites(suggestionId) {
        try {
            let csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
            let response = await fetch(`/favorites`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': csrfToken,
                },
                body: JSON.stringify({
                    suggestion_id: suggestionId
                }),
            });

            if (response.ok) {
                console.log('success');
            } else {
                console.error('Failed to add to favorites :', response.status);
            }
        } catch (error) {
            console.error(error);
        }
    }
</script>
